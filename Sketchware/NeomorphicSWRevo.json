[{"code":"%1$s \u003d new PolygonView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setStyle(%3$s);\n%1$s.setSide(%4$s);\n%5$s.addView(%1$s);","name":"PolygonView","palette":"64","type":" ","spec":"Create %m.PolygonView at %m.activity Style %d Side %d inflateTo %m.view"},{"code":"%1$s \u003d new PolygonButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setSide(%3$s);\n%4$s.addView(%1$s);","name":"PolygonButtonAtPolygonView","palette":"64","type":" ","spec":"Create %m.PolygonButton at %m.activity Side %d inflateTo %m.PolygonView"},{"code":"%1$s \u003d new PolygonButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setSide(%3$s);\n%4$s.addView(%1$s);","name":"PolygonButtonAtView","palette":"64","type":" ","spec":"Create %m.PolygonButton at %m.activity Side %d inflateTo %m.view"},{"code":"%1$s","name":"ViewPolygonView","typeName":"View","palette":"64","type":"v","spec":"%m.PolygonView"},{"code":"%1$s","name":"ViewPolygonButton","typeName":"View","palette":"64","type":"v","spec":"%m.PolygonButton"},{"code":"%1$s.setBorderWidth((float)%2$s);","name":"PVsetBorderWidth","palette":"64","type":" ","spec":"%m.view setBorderWidth %d"},{"code":"%1$s.setBorderColor(%2$s);","name":"PVsetBorderColor","palette":"64","type":" ","spec":"%m.view setBorderColor %m.color"},{"code":"%1$s.setBorderColor(Color.parseColor(%2$s));","name":"PVsetBorderParseColor","palette":"64","type":" ","spec":"%m.view setBorderColor %s"},{"code":"%1$s.setBackground_color(%2$s);\n%1$s.setDark_color(%3$s);\n%1$s.setLight_color(%4$s);","name":"ModeColor_int","palette":"64","type":" ","spec":"Neomorphic %m.view BGcolor %m.color DarkColor %m.color LightColor %m.color"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\n%1$s.setColorFilter(%4$s, PorterDuff.Mode.MULTIPLY);\nint %1$SpaddingDp \u003d (int)%5$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%6$s.addView(%1$s);","name":"SetIcon","palette":"64","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Color %m.color Padding %d addTo %m.view"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\n%1$s.setColorFilter(Color.parseColor(%4$s), PorterDuff.Mode.MULTIPLY);\nint %1$SpaddingDp \u003d (int)%5$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%6$s.addView(%1$s);","name":"SetIconColorParse","palette":"64","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Color %s Padding %d addTo %m.view"},{"code":"%1$s.setStyle(%2$s);","name":"SetStyle","palette":"64","type":" ","spec":"Neomorphic %m.view setStyle %d"},{"code":"%1$s \u003d new CircleView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%1$s.setBackgroundColor(%3$s);\n%4$s.addView(%1$s);","name":"CircleViewButton","palette":"64","type":" ","spec":"Create %m.CircleView at %m.activity BGcolor %m.color inflateTo %m.view"},{"code":"        ViewGroup viewGroup \u003d %1$s;\n        final ImageView %2$S \u003d (ImageView) viewGroup.getChildAt(0);\n        %1$s.setOnTouchListener(new View.OnTouchListener() {\n            @Override\n            public boolean onTouch(View v, MotionEvent event) {\n                // is shape Contains Point ----\u003e for detect place of Touch is in the shape or not\n                if (%1$s.isShapeContainsPoint(event.getX(), event.getY())) {\n                    switch (event.getAction()) {\n                        case MotionEvent.ACTION_DOWN:\n                            // PRESSED\n                            //use only \"small inner shadow\" because its same size with \"drop shadow\" style and \"big inner shadow\" is bigger\n                            // \"small inner shadow\" \u003d \"drop shadow\"\n                            // \"big inner shadow\"  \u003e \"drop shadow\"\n                            %1$s.setStyle(neo.small_inner_shadow);\n                            %2$S.setScaleX(%2$S.getScaleX() * 0.9f);\n                            %2$S.setScaleY(%2$S.getScaleY() * 0.9f);\n                            %3$s\n                            return true; // if you want to handle the touch event\n                        case MotionEvent.ACTION_UP:\n                        case MotionEvent.ACTION_CANCEL:\n                            // RELEASED\n                            %1$s.setStyle(neo.drop_shadow);\n                            %2$S.setScaleX(1);\n                            %2$S.setScaleY(1);\n                            return true; // if you want to handle the touch event\n                    }\n                }\n                return false;\n            }\n        });","name":"CircleViewOnTouch","palette":"64","type":"c","spec":"%m.CircleView with Icon ID %s.inputOnly onTouchListener"},{"code":"%1$s","name":"ViewCircleView","typeName":"View","palette":"64","type":"v","spec":"%m.CircleView"},{"code":"%1$s \u003d new neoText(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.WRAP_CONTENT));\n%1$s.setStyle(%3$s);\n%4$s.addView(%1$s);","name":"NeoTextView","palette":"64","type":" ","spec":"NeoText %m.neoText at %m.activity Style %d inflateTo %m.view"},{"code":"TextView %1$s \u003d new TextView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setTextColor(%3$s);\n%1$s.setTextSize(TypedValue.COMPLEX_UNIT_DIP, %4$s);\n%5$s.addView(%1$s);","name":"TextOnNeo","palette":"64","type":" ","spec":"TextOnNeo ID %s.inputOnly at %m.activity Color %m.color Size %d inflateTo %m.view"},{"code":"%1$s","name":"ViewNeoText","typeName":"View","palette":"64","type":"v","spec":"%m.neoText"},{"code":"%1$s.setText(%2$s);","name":"TextOnNeoSetText","typeName":"View","palette":"64","type":" ","spec":"TextVieOnNeo %m.textview setText %s"},{"code":"%1$s.setShadow_radius((float)%2$s);","name":"ShadowRadius","palette":"64","type":" ","spec":"%m.view setShadowRadius %d"},{"code":"%1$s.setShadow_position_x((float)%2$s);","name":"ShadowPositionX","palette":"64","type":" ","spec":"%m.view setShadowPositionX %d"},{"code":"%1$s.setShadow_position_y((float)%2$s);","name":"ShadowPositionY","palette":"64","type":" ","spec":"%m.view setShadowPositionY %d"},{"code":"%1$s \u003d new RectButton(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\n%3$s.addView(%1$s);","name":"RectButton","palette":"64","type":" ","spec":"Create %m.RectButton at %m.activity inflateTo %m.view"},{"code":"%1$s.setTopLeftRadius((float)%2$s);","name":"RectSetTopLeftRadius","palette":"64","type":" ","spec":"RectButton %m.view setTopLeftRadius %d"},{"code":"%1$s.setTopRightRadius((float)%2$s);","name":"RectSetTopRightRadius","palette":"64","type":" ","spec":"RectButton %m.view setTopRightRadius %d"},{"code":"%1$s.setBottomRightRadius((float)%2$s);","name":"RectSetBottomRightRadius","palette":"64","type":" ","spec":"RectButton %m.view setBottomRightRadius %d"},{"code":"%1$s.setBottomLeftRadius((float)%2$s);","name":"RectSetBottomLeftRadius","palette":"64","type":" ","spec":"RectButton %m.view setBottomLeftRadius %d"},{"code":"%1$s","name":"ViewRectButton","typeName":"View","palette":"64","type":"v","spec":"%m.RectButton"},{"code":"ImageView %1$s \u003d new ImageView(%2$s.this);\n%1$s.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,LinearLayout.LayoutParams.MATCH_PARENT));\r\n%1$s.setImageResource(R.drawable.%3$s);\nint %1$SpaddingDp \u003d (int) %4$s;\nfloat %1$Sdensity \u003d getApplicationContext().getResources().getDisplayMetrics().density;\nint %1$SpaddingPixel \u003d (int)(%1$SpaddingDp * %1$Sdensity);\n%1$s.setPadding(%1$SpaddingPixel, %1$SpaddingPixel , %1$SpaddingPixel , %1$SpaddingPixel);\r\n%5$s.addView(%1$s);","name":"SetIconNoColor","palette":"64","type":" ","spec":"IconID %s.inputOnly at %m.activity Image %m.resource Padding %d addTo %m.view"}]